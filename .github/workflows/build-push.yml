name: Tutor Build Action Test

on:
  push:
    branches:
      - 'vue/PADV-317'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      # - name: Build Image
      #   uses: pearson-advance/tutor-build-image-action@0.0.1.alpha
      #   with:
      #     python-version: '3.8'
      #     tutor-version: '15.3.0'
      #     image-to-be-built: 'openedx'
      #     repository-name: 'pearsonopenedxops'
      #     image-name: 'tutor-test'
      #     image-tag: '0.0.2'
      #     docker-username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     docker-token: ${{ secrets.DOCKERHUB_TOKEN }}
      #     private-repository: 'Pearson-Advance/pearson-core.git'
      #     theme-repository: 'Pearson-Advance/openedx-themes.git'
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Create and activate the env
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install Tutor
        run: pip install tutor=='15.3.0'

      - name: Clone repository
        run: |
          owners=${{ secrets.OWNERS }}
          repositories=${{ secrets.REPOSITORIES }}
          COUNTER=0
          themes="openedx-themes"
          for repository in "${repositories[@]}"; do
            if [ $repository == $themes ]; then
              if [ -z "true" ]; then
                  git clone https://github.com/${owners[$COUNTER]}/$repository.git
                    #"$(tutor config printroot)/env/build/openedx/themes/myopenedxtheme"
              else
                  git clone https://${{ secrets.GH_PAT }}@github.com/${owners[$COUNTER]}/$repository.git
                    #"$(tutor config printroot)/env/build/openedx/themes/myopenedxtheme"
              fi
            else
              if [ -z "true" ]; then
                  git clone https://github.com/"${owners[$COUNTER]}"/"$repository".git \
                    "$(tutor config printroot)/env/build/openedx/requirements/myprivaterepo"
              else
                  git clone https://${{ secrets.GH_PAT }}@github.com/${owners[$COUNTER]}/$repository.git \
                    "$(tutor config printroot)/env/build/openedx/requirements/myprivaterepo"
              fi
              echo "-e ./$repository" >> "$(tutor config printroot)/env/build/openedx/requirements/private.txt"
            fi
            let COUNTER=COUNTER+1
            echo "Cloned "$repository" repository successfully."
          done


      # - name: Clone repository
      #   run: |
      #     owners=${{ secrets.OWNERS }}
      #     repositories=${{ secrets.REPOSITORIES }}
      #     COUNTER=0
      #     themes="openedx-themes"
      #     for repository in "${repositories[@]}"; do
      #       if [ $repository == $themes ]; then
      #         echo "Uno"
      #         # if [ "true" ]; then
      #         #     echo "Uno"
      #         #     # git clone https://github.com/"${owners[$COUNTER]}"/"$repository" # \
      #         #       # "$(tutor config printroot)/env/build/openedx/themes/myopenedxtheme"
      #         # else
      #         #   echo "Dos"
      #         #     git clone https://${{ secrets.GH_PAT }}@github.com/"${owners[$COUNTER]}"/"$repository" # \
      #         #       # "$(tutor config printroot)/env/build/openedx/themes/myopenedxtheme"
      #         # fi
      #       else
      #         echo "Dos"
      #         # if [ "true" ]; then
      #         #   echo "tres"
      #         #     # git clone https://github.com/"${owners[$COUNTER]}"/"$repository"
      #         # else
      #         #   echo "Cuatro"
      #         #     # git clone https://${{ secrets.GH_PAT }}@github.com/"${owners[$COUNTER]}"/"$repository"
      #         # fi
      #         # mv $repository "$(tutor config printroot)/env/build/openedx/requirements/"$repository"
      #         # echo "-e ./$repository" >> "$(tutor config printroot)/env/build/openedx/requirements/private.txt"
      #       fi
      #       let COUNTER++
      #       echo "Cloned "$repository" repository successfully."
      #     done

      # - name: Render Tutor Templates
      #   run: tutor config save

      # - name: Build image
      #   run: |
      #     tutor images build openedx \
      #         --docker-arg --tag="pearsonopenedxops/tutor-test:0.0.3"

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Push image to DockerHub
      #   run: docker push pearsonopenedxops/tutor-test:0.0.3

